/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.Conexao;
import control.DaoMateriaisSolicitados;
import control.DaoMaterial;
import control.DaoRequisicaoCompra;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.MateriaisSolicitados;
import model.Material;
import model.RequisicaoCompra;
import model.Setor;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Gabriel Pilan
 */
public class GUI_ConsultarRequisicao extends javax.swing.JFrame {

    public static String IdRequisicao;
    DefaultTableModel dm = null;
    /**
     * Creates new form GUI_ConsultarRequisicao
     */
    public GUI_ConsultarRequisicao() {
        initComponents();
        jTableRequisicao.setAutoCreateRowSorter(true);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRequisicao = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtIdRequisicao = new javax.swing.JTextField();
        btnBuscarRequisicao = new javax.swing.JButton();
        chkFiltrarRequisicoesAberto = new javax.swing.JCheckBox();
        btnFazerCotacao = new javax.swing.JButton();
        btnCopiarIDRequisicao = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtCotacao = new javax.swing.JTextField();
        btnBuscarCotacao = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPedidoDeCompra = new javax.swing.JTextField();
        btnBuscarPedidoCompra = new javax.swing.JButton();
        rbPesquisarRequisicaoCompra = new javax.swing.JRadioButton();
        rbPesquisarPedidoCompra = new javax.swing.JRadioButton();
        rbPesquisarCotacao = new javax.swing.JRadioButton();
        rbPesquisarTodas = new javax.swing.JRadioButton();
        rbPesquisarSetor = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        cmbSetores = new javax.swing.JComboBox<>();
        btnBuscarSetor = new javax.swing.JButton();
        btnRecarregaTabela = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultar Requisicao");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Tabela de Requsições");

        jTableRequisicao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Requerente", "Setor do Requerente", "Id Requisição", "Status", "Data da Requisição", "Id da Cotação Relacionada", "Id do Pedido de Compra"
            }
        ));
        jScrollPane1.setViewportView(jTableRequisicao);

        jLabel2.setText("Id Requisição");

        txtIdRequisicao.setEnabled(false);
        txtIdRequisicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdRequisicaoActionPerformed(evt);
            }
        });
        txtIdRequisicao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdRequisicaoKeyReleased(evt);
            }
        });

        btnBuscarRequisicao.setText("Buscar");
        btnBuscarRequisicao.setEnabled(false);
        btnBuscarRequisicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarRequisicaoActionPerformed(evt);
            }
        });

        chkFiltrarRequisicoesAberto.setText("Filtrar por Requisições em Aberto");
        chkFiltrarRequisicoesAberto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFiltrarRequisicoesAbertoActionPerformed(evt);
            }
        });

        btnFazerCotacao.setText("Fazer Cotação(oes) da Requisição Selecionada");
        btnFazerCotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFazerCotacaoActionPerformed(evt);
            }
        });

        btnCopiarIDRequisicao.setText("Copiar Id da Requisição Selecionada");
        btnCopiarIDRequisicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarIDRequisicaoActionPerformed(evt);
            }
        });

        jLabel3.setText("Id da Cotação Relacionada");

        txtCotacao.setEnabled(false);

        btnBuscarCotacao.setText("Buscar");
        btnBuscarCotacao.setEnabled(false);
        btnBuscarCotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCotacaoActionPerformed(evt);
            }
        });

        jLabel4.setText("Id do Pedido de Compra");

        txtPedidoDeCompra.setEnabled(false);

        btnBuscarPedidoCompra.setText("Buscar");
        btnBuscarPedidoCompra.setEnabled(false);
        btnBuscarPedidoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPedidoCompraActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPesquisarRequisicaoCompra);
        rbPesquisarRequisicaoCompra.setText("Pesquisar por ID da Requisição de Compra");
        rbPesquisarRequisicaoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPesquisarRequisicaoCompraActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPesquisarPedidoCompra);
        rbPesquisarPedidoCompra.setText("Pesquisar por ID do Pedido de Compra");
        rbPesquisarPedidoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPesquisarPedidoCompraActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPesquisarCotacao);
        rbPesquisarCotacao.setText("Pesquisar por ID da Cotação Relacionada");
        rbPesquisarCotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPesquisarCotacaoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPesquisarTodas);
        rbPesquisarTodas.setSelected(true);
        rbPesquisarTodas.setText("Pesquisar todas as Requisições de Compra");
        rbPesquisarTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPesquisarTodasActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPesquisarSetor);
        rbPesquisarSetor.setText("Pesquisar pelo Setor que Requeriu a Compra");
        rbPesquisarSetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPesquisarSetorActionPerformed(evt);
            }
        });

        jLabel5.setText("Nome do Setor");

        cmbSetores.setEnabled(false);

        btnBuscarSetor.setText("Buscar");
        btnBuscarSetor.setEnabled(false);
        btnBuscarSetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarSetorActionPerformed(evt);
            }
        });

        btnRecarregaTabela.setText("Recarregar a Tabela");
        btnRecarregaTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecarregaTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbPesquisarRequisicaoCompra)
                            .addComponent(jLabel1)
                            .addComponent(chkFiltrarRequisicoesAberto)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbPesquisarPedidoCompra)
                                    .addComponent(rbPesquisarCotacao)
                                    .addComponent(rbPesquisarTodas)
                                    .addComponent(rbPesquisarSetor))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPedidoDeCompra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtIdRequisicao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnBuscarPedidoCompra)
                                            .addComponent(btnBuscarRequisicao)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtCotacao, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(cmbSetores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnBuscarCotacao)
                                            .addComponent(btnBuscarSetor)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFazerCotacao)
                                .addGap(18, 18, 18)
                                .addComponent(btnCopiarIDRequisicao)
                                .addGap(29, 29, 29)
                                .addComponent(btnRecarregaTabela)))
                        .addGap(0, 286, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(rbPesquisarTodas)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdRequisicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarRequisicao)
                    .addComponent(rbPesquisarRequisicaoCompra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPedidoDeCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPedidoCompra)
                    .addComponent(rbPesquisarPedidoCompra))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCotacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCotacao)
                    .addComponent(rbPesquisarCotacao))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbPesquisarSetor)
                    .addComponent(jLabel5)
                    .addComponent(cmbSetores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarSetor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(chkFiltrarRequisicoesAberto)
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFazerCotacao)
                    .addComponent(btnCopiarIDRequisicao)
                    .addComponent(btnRecarregaTabela))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdRequisicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdRequisicaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdRequisicaoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       conexao = new Conexao("GABRIEL", "GABRIEL");
        conexao.setDriver("oracle.jdbc.driver.OracleDriver");
        conexao.setConnectionString("jdbc:oracle:thin:@localhost:1521:xe");
        daoMaterial = new DaoMaterial(conexao.conectar());
        daoReq = new DaoRequisicaoCompra(conexao.conectar());
        
        String sqlquery = "select * from tbl_solicitacao_compra";
        
        Statement stmt;
        ResultSet rs;
        
        try{
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(sqlquery);
            jTableRequisicao.setModel(DbUtils.resultSetToTableModel(rs));
        
        } catch(SQLException ex){
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        dm =  (DefaultTableModel) jTableRequisicao.getModel();
        
        /*Implementar um jeito de carregar o setor no ComboBox de Setor*/
        
        sqlquery = "select NOMESETOR from tbl_setor";
        
        try{
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(sqlquery);
            while(rs.next()){
            cmbSetores.addItem(rs.getString("NOMESETOR"));
            }                  
        } catch(SQLException ex){
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_formWindowOpened

    
    private void btnCopiarIDRequisicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarIDRequisicaoActionPerformed
        //PARA COPIAR O TEXTO SELECIONADO DA TABELA PARA O BUFFER (CLIPBOARD)
        String myString = jTableRequisicao.getValueAt(jTableRequisicao.getSelectedRow(), 0).toString();
        StringSelection stringSelection = new StringSelection(myString);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);
    }//GEN-LAST:event_btnCopiarIDRequisicaoActionPerformed

    private void txtIdRequisicaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdRequisicaoKeyReleased
        //PARA FAZER FUNCIONAR A PESQUISA DINAMICA PRECISA DISSO
        //String query = txtIdRequisicao.getText().trim();
        //Filter(query);
    }//GEN-LAST:event_txtIdRequisicaoKeyReleased

    private void btnBuscarRequisicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarRequisicaoActionPerformed
        String sqlquery = "select * from tbl_solicitacao_compra where NUMSOLICITACAO = " + txtIdRequisicao.getText().trim();
        Statement stmt;
        ResultSet rs;
        
        try{
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(sqlquery);
            jTableRequisicao.setModel(DbUtils.resultSetToTableModel(rs));
        
        } catch(SQLException ex){
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        dm =  (DefaultTableModel) jTableRequisicao.getModel();
    }//GEN-LAST:event_btnBuscarRequisicaoActionPerformed

    private void btnRecarregaTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecarregaTabelaActionPerformed
        String sqlquery = "select * from tbl_solicitacao_compra";
        
        Statement stmt;
        ResultSet rs;
        
        try{
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(sqlquery);
            jTableRequisicao.setModel(DbUtils.resultSetToTableModel(rs));
        
        } catch(SQLException ex){
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        dm =  (DefaultTableModel) jTableRequisicao.getModel();
    }//GEN-LAST:event_btnRecarregaTabelaActionPerformed

    private void btnBuscarPedidoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPedidoCompraActionPerformed
        //Inserir o numero da requisicao de compra na tabela PedidoCompra para essa busca funcionar
        String codigoPedidoCompra = txtPedidoDeCompra.getText().trim();
        int codigoRequisicaoCompra = 0;
        
        String Query2 = "select NUMSOLICITACAO from tbl_pedido_compra where NUMPEDIDO = " + codigoPedidoCompra;
        
        
        Statement stmt;
        ResultSet rs;
        System.out.println(codigoPedidoCompra);
        
        try{
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(Query2);
            while(rs.next()){
            codigoRequisicaoCompra = rs.getInt("NUMSOLICITACAO");
            }
            String sqlquery = "select * from tbl_solicitacao_compra where NUMSOLICITACAO = " + codigoRequisicaoCompra;
            rs = stmt.executeQuery(sqlquery);
            jTableRequisicao.setModel(DbUtils.resultSetToTableModel(rs));
        
        } catch(SQLException ex){
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }        
        dm =  (DefaultTableModel) jTableRequisicao.getModel();
    }//GEN-LAST:event_btnBuscarPedidoCompraActionPerformed

    private void btnBuscarCotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCotacaoActionPerformed
    //Inserir o numero da requisicao de compra na tabela cotacao para essa busca funcionar
        String numCotacao =  txtCotacao.getText().trim();
        int codigoCotacao = 0;
    
        String queryCotacao = "select NUMSOLICITACAO from tbl_cotacao where NUMCOTACAO = " + numCotacao;
        
        Statement stmt;
        ResultSet rs;
        
        try{
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(queryCotacao);
            while(rs.next()){
            codigoCotacao = rs.getInt("NUMSOLICITACAO");
            }          
            String sqlquery = "select * from tbl_solicitacao_compra where NUMSOLICITACAO = " + codigoCotacao;
            rs = stmt.executeQuery(sqlquery);
            jTableRequisicao.setModel(DbUtils.resultSetToTableModel(rs));
        
        } catch(SQLException ex){
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        dm =  (DefaultTableModel) jTableRequisicao.getModel();
    }//GEN-LAST:event_btnBuscarCotacaoActionPerformed

    private void btnBuscarSetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarSetorActionPerformed
        String nomeSetor;
        nomeSetor = "'" + cmbSetores.getSelectedItem().toString().trim() + "'";
        int codigoSetor = 0;
        
        String querySetor = "Select CODSETOR from tbl_Setor where NOMESETOR = " +  nomeSetor;
        
        
        Statement stmt;
        ResultSet rs;
        
        try{
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(querySetor);
            while(rs.next()){
            codigoSetor = rs.getInt("CODSETOR");
            }
            String sqlquery = "select * from tbl_solicitacao_compra where SETOR = " + codigoSetor;
            rs = stmt.executeQuery(sqlquery);
            jTableRequisicao.setModel(DbUtils.resultSetToTableModel(rs));
        
        } catch(SQLException ex){
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        dm =  (DefaultTableModel) jTableRequisicao.getModel();
    }//GEN-LAST:event_btnBuscarSetorActionPerformed

    private void chkFiltrarRequisicoesAbertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFiltrarRequisicoesAbertoActionPerformed
        if(chkFiltrarRequisicoesAberto.isSelected()){
            String sqlquery = "select * from tbl_solicitacao_compra where SITUACAOSOLICITACAO = 'Em Aberto'";
        
        Statement stmt;
        ResultSet rs;
        
        try{
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(sqlquery);
            jTableRequisicao.setModel(DbUtils.resultSetToTableModel(rs));
        
        } catch(SQLException ex){
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        dm =  (DefaultTableModel) jTableRequisicao.getModel();
            
        }else{
            btnRecarregaTabelaActionPerformed(evt);
        }
    }//GEN-LAST:event_chkFiltrarRequisicoesAbertoActionPerformed

    private void btnFazerCotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFazerCotacaoActionPerformed
        try {
            if (jTableRequisicao.getSelectedRow() == -1) {
                throw new Exception("Nao existe nenhuma Requisicao selecionado na Tabela");
            }else {
                String codigo;

                codigo = jTableRequisicao.getValueAt(jTableRequisicao.getSelectedRow(), 0).toString();
                btnCopiarIDRequisicaoActionPerformed(evt);
                IdRequisicao = codigo;
                new GUI_GerenciarCotacoesDeUmaRequisicao().setVisible(true);
                }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Falha: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnFazerCotacaoActionPerformed

    private void rbPesquisarRequisicaoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPesquisarRequisicaoCompraActionPerformed
        if(rbPesquisarRequisicaoCompra.isSelected()){
        txtIdRequisicao.setEnabled(true);
        btnBuscarRequisicao.setEnabled(true);
        
        txtCotacao.setEnabled(false);
        btnBuscarCotacao.setEnabled(false);
        txtPedidoDeCompra.setEnabled(false);
        btnBuscarPedidoCompra.setEnabled(false);
        cmbSetores.setEnabled(false);
        btnBuscarSetor.setEnabled(false);
        }
    }//GEN-LAST:event_rbPesquisarRequisicaoCompraActionPerformed

    private void rbPesquisarPedidoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPesquisarPedidoCompraActionPerformed
        if(rbPesquisarPedidoCompra.isSelected()){
        txtPedidoDeCompra.setEnabled(true);
        btnBuscarPedidoCompra.setEnabled(true);
        
        
        txtCotacao.setEnabled(false);
        btnBuscarCotacao.setEnabled(false);
        txtIdRequisicao.setEnabled(false);
        btnBuscarRequisicao.setEnabled(false);
        cmbSetores.setEnabled(false);
        btnBuscarSetor.setEnabled(false);
        }
    }//GEN-LAST:event_rbPesquisarPedidoCompraActionPerformed

    private void rbPesquisarCotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPesquisarCotacaoActionPerformed
        if(rbPesquisarCotacao.isSelected()){
            txtCotacao.setEnabled(true);
        btnBuscarCotacao.setEnabled(true);
        
        
        
        txtPedidoDeCompra.setEnabled(false);
        btnBuscarPedidoCompra.setEnabled(false);
        txtIdRequisicao.setEnabled(false);
        btnBuscarRequisicao.setEnabled(false);
        cmbSetores.setEnabled(false);
        btnBuscarSetor.setEnabled(false);
        }
    }//GEN-LAST:event_rbPesquisarCotacaoActionPerformed

    private void rbPesquisarSetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPesquisarSetorActionPerformed
        if(rbPesquisarSetor.isSelected()){
            cmbSetores.setEnabled(true);
        btnBuscarSetor.setEnabled(true);

        
        
        
        txtPedidoDeCompra.setEnabled(false);
        btnBuscarPedidoCompra.setEnabled(false);
        txtIdRequisicao.setEnabled(false);
        btnBuscarRequisicao.setEnabled(false);
            txtCotacao.setEnabled(false);
        btnBuscarCotacao.setEnabled(false);
        }
    }//GEN-LAST:event_rbPesquisarSetorActionPerformed

    private void rbPesquisarTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPesquisarTodasActionPerformed
        txtPedidoDeCompra.setEnabled(false);
        btnBuscarPedidoCompra.setEnabled(false);
        txtIdRequisicao.setEnabled(false);
        btnBuscarRequisicao.setEnabled(false);
        cmbSetores.setEnabled(false);
        btnBuscarSetor.setEnabled(false);
        txtCotacao.setEnabled(false);
        btnBuscarCotacao.setEnabled(false);
    }//GEN-LAST:event_rbPesquisarTodasActionPerformed

    private void Filter(String query){
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(dm);
        jTableRequisicao.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarRequisicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarRequisicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarRequisicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarRequisicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_ConsultarRequisicao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCotacao;
    private javax.swing.JButton btnBuscarPedidoCompra;
    private javax.swing.JButton btnBuscarRequisicao;
    private javax.swing.JButton btnBuscarSetor;
    private javax.swing.JButton btnCopiarIDRequisicao;
    private javax.swing.JButton btnFazerCotacao;
    private javax.swing.JButton btnRecarregaTabela;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkFiltrarRequisicoesAberto;
    private javax.swing.JComboBox<String> cmbSetores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRequisicao;
    private javax.swing.JRadioButton rbPesquisarCotacao;
    private javax.swing.JRadioButton rbPesquisarPedidoCompra;
    private javax.swing.JRadioButton rbPesquisarRequisicaoCompra;
    private javax.swing.JRadioButton rbPesquisarSetor;
    private javax.swing.JRadioButton rbPesquisarTodas;
    private javax.swing.JTextField txtCotacao;
    private javax.swing.JTextField txtIdRequisicao;
    private javax.swing.JTextField txtPedidoDeCompra;
    // End of variables declaration//GEN-END:variables
    private Conexao conexao;
    private Material material;
    private DaoMaterial daoMaterial;
    private DaoRequisicaoCompra daoReq;
    private RequisicaoCompra requisicaoCompra;
    private MateriaisSolicitados materiaisSolicitados;
    private DaoMateriaisSolicitados daoMateriaisSolicitados;
    private Setor setor;
}
