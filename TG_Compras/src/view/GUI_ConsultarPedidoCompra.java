/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.Conexao;
import control.DaoCotacao;
import control.DaoMaterial;
import control.DaoPedCompra;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Cotacao;
import model.Material;
import model.PedidoCompra;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Gabriel Pilan
 */
public class GUI_ConsultarPedidoCompra extends javax.swing.JFrame {

    /**
     * Creates new form GUI_ConsultarPedidoCompra
     */
    public GUI_ConsultarPedidoCompra() {
        initComponents();
        jTablePedidosCompra.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtPedidoCompra = new javax.swing.JTextField();
        btnBuscarIDPedidoCompra = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePedidosCompra = new javax.swing.JTable();
        rbAguardandoAprovacao = new javax.swing.JRadioButton();
        rbAguardandoContatoFornecedor = new javax.swing.JRadioButton();
        rbPedidoConcluido = new javax.swing.JRadioButton();
        rbPedidoNegado = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txtCotacaoVencedora = new javax.swing.JTextField();
        btnBuscarCotacaoVencedora = new javax.swing.JButton();
        rbIDPedidoCompra = new javax.swing.JRadioButton();
        rbIDCotacaoVencedora = new javax.swing.JRadioButton();
        btnRecarregarTabela = new javax.swing.JButton();
        btnGerarReport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultar Pedido de Compra");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("ID Pedido de Compra");

        txtPedidoCompra.setEnabled(false);

        btnBuscarIDPedidoCompra.setText("Buscar");
        btnBuscarIDPedidoCompra.setEnabled(false);
        btnBuscarIDPedidoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarIDPedidoCompraActionPerformed(evt);
            }
        });

        jLabel2.setText("Tabela de Pedidos de Compra");

        jTablePedidosCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NUMERO_PEDIDO", "NUMERO_COTACAO", "NUMERO_SOLICITACAO", "NOME_MATERIAL", "DATA_PEDIDO", "SITUACAO_PEDIDO"
            }
        ));
        jScrollPane1.setViewportView(jTablePedidosCompra);

        buttonGroup1.add(rbAguardandoAprovacao);
        rbAguardandoAprovacao.setText("Filtrar por pedidos Aguardando Aprovação da Gerencia");
        rbAguardandoAprovacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAguardandoAprovacaoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbAguardandoContatoFornecedor);
        rbAguardandoContatoFornecedor.setText("Filtrar por pedidos Aguardando Contato com o Fornecedor");
        rbAguardandoContatoFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAguardandoContatoFornecedorActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPedidoConcluido);
        rbPedidoConcluido.setText("Filtrar por pedidos Concluídos");
        rbPedidoConcluido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPedidoConcluidoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPedidoNegado);
        rbPedidoNegado.setText("Filtrar por pedidos Negados");
        rbPedidoNegado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPedidoNegadoActionPerformed(evt);
            }
        });

        jLabel3.setText("ID Cotação Vencedora");

        txtCotacaoVencedora.setEnabled(false);

        btnBuscarCotacaoVencedora.setText("Buscar");
        btnBuscarCotacaoVencedora.setEnabled(false);
        btnBuscarCotacaoVencedora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCotacaoVencedoraActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbIDPedidoCompra);
        rbIDPedidoCompra.setText("Pesquisar pelo ID do Pedido de Compra");
        rbIDPedidoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIDPedidoCompraActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbIDCotacaoVencedora);
        rbIDCotacaoVencedora.setText("Pesquisar pelo ID da Cotação Vencedora");
        rbIDCotacaoVencedora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIDCotacaoVencedoraActionPerformed(evt);
            }
        });

        btnRecarregarTabela.setText("Recarregar Tabela");
        btnRecarregarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecarregarTabelaActionPerformed(evt);
            }
        });

        btnGerarReport.setText("Gerar Relatorio");
        btnGerarReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnRecarregarTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnGerarReport)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbIDCotacaoVencedora)
                            .addComponent(rbIDPedidoCompra))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPedidoCompra)
                            .addComponent(txtCotacaoVencedora, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarCotacaoVencedora)
                            .addComponent(btnBuscarIDPedidoCompra))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbPedidoConcluido)
                                    .addComponent(rbAguardandoAprovacao)
                                    .addComponent(rbAguardandoContatoFornecedor))
                                .addGap(86, 86, 86))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbPedidoNegado)
                                .addGap(49, 49, 49))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbAguardandoAprovacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbAguardandoContatoFornecedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbPedidoConcluido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbPedidoNegado))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(rbIDPedidoCompra)
                            .addComponent(txtPedidoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarIDPedidoCompra))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(rbIDCotacaoVencedora)
                            .addComponent(txtCotacaoVencedora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarCotacaoVencedora))))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRecarregarTabela)
                    .addComponent(btnGerarReport))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarIDPedidoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarIDPedidoCompraActionPerformed
        pedido = null;
        try {
            if (txtPedidoCompra.getText().isEmpty()) {
                throw new Exception("Id do Pedido não foi informado.\n"
                        + "Por favor informar um código de Pedido para pesquisa.");
            } else {
                pedido = daoPedido.consultar(Integer.parseInt(txtPedidoCompra.getText().trim()));

                if (pedido == null) {
                    throw new Exception("Id do Pedido informado não existe.\n ");
                } else {
                    String sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                        + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                        + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND NumPedido = " + txtPedidoCompra.getText().trim();

                    Statement stmt;
                    ResultSet rs;

                    try {
                        stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        rs = stmt.executeQuery(sqlquery);
                        jTablePedidosCompra.setModel(DbUtils.resultSetToTableModel(rs));

                    } catch (SQLException ex) {
                        Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    DefaultTableModel dm = (DefaultTableModel) jTablePedidosCompra.getModel();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Falha ao pesquisar Pedido: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarIDPedidoCompraActionPerformed

    private void btnBuscarCotacaoVencedoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCotacaoVencedoraActionPerformed
        cotacao = null;
        try {
            if (txtCotacaoVencedora.getText().isEmpty()) {
                throw new Exception("Id Cotacao não foi informado.\n"
                        + "Por favor informar um código de cotacao para pesquisa.");
            } else {
                cotacao = daoCotacao.consultar(Integer.parseInt(txtCotacaoVencedora.getText().trim()));

                if (cotacao == null) {
                    throw new Exception("Id Cotacao informado não existe.\n ");
                } else {
                    String sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tc.NUMCOTACAO = " + txtCotacaoVencedora.getText().trim();

                    Statement stmt;
                    ResultSet rs;

                    try {
                        stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        rs = stmt.executeQuery(sqlquery);
                        jTablePedidosCompra.setModel(DbUtils.resultSetToTableModel(rs));

                    } catch (SQLException ex) {
                        Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    DefaultTableModel dm = (DefaultTableModel) jTablePedidosCompra.getModel();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Falha ao pesquisar Pedido: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarCotacaoVencedoraActionPerformed

    private void rbAguardandoAprovacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAguardandoAprovacaoActionPerformed
        if (rbAguardandoAprovacao.isSelected()) {

            String sqlquery;
            if(rbIDPedidoCompra.isSelected() && !txtPedidoCompra.getText().isEmpty()) {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Aguardando Aprovacao da Gerencia' AND NumPedido = " + txtPedidoCompra.getText().trim();
                
            } else if(rbIDCotacaoVencedora.isSelected() && !txtCotacaoVencedora.getText().isEmpty()) {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Aguardando Aprovacao da Gerencia' AND tc.NumCotacao = " + txtCotacaoVencedora.getText().trim();
                
            } else {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Aguardando Aprovacao da Gerencia'";
            }

            Statement stmt;
            ResultSet rs;

            try {
                stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                rs = stmt.executeQuery(sqlquery);
                jTablePedidosCompra.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException ex) {
                Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultTableModel dm = (DefaultTableModel) jTablePedidosCompra.getModel();

        } else {
            btnRecarregarTabelaActionPerformed(evt);
        }
    }//GEN-LAST:event_rbAguardandoAprovacaoActionPerformed

    private void rbAguardandoContatoFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAguardandoContatoFornecedorActionPerformed
        if (rbAguardandoContatoFornecedor.isSelected()) {

            String sqlquery;
            if(rbIDPedidoCompra.isSelected() && !txtPedidoCompra.getText().isEmpty()) {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Aguardando Contato com Fornecedor' AND NumPedido = " + txtPedidoCompra.getText().trim();
                
            } else if(rbIDCotacaoVencedora.isSelected() && !txtCotacaoVencedora.getText().isEmpty()) {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Aguardando Contato com Fornecedor' AND tc.NumCotacao = " + txtCotacaoVencedora.getText().trim();
                
            } else {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Aguardando Contato com Fornecedor'";
            }

            Statement stmt;
            ResultSet rs;

            try {
                stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                rs = stmt.executeQuery(sqlquery);
                jTablePedidosCompra.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException ex) {
                Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultTableModel dm = (DefaultTableModel) jTablePedidosCompra.getModel();

        } else {
            btnRecarregarTabelaActionPerformed(evt);
        }
    }//GEN-LAST:event_rbAguardandoContatoFornecedorActionPerformed

    private void rbPedidoConcluidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPedidoConcluidoActionPerformed
        if (rbPedidoConcluido.isSelected()) {

            String sqlquery;
            if(rbIDPedidoCompra.isSelected() && !txtPedidoCompra.getText().isEmpty()) {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Concluido' AND NumPedido = " + txtPedidoCompra.getText().trim();
                
            } else if(rbIDCotacaoVencedora.isSelected() && !txtCotacaoVencedora.getText().isEmpty()) {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Concluido' AND tc.NumCotacao = " + txtCotacaoVencedora.getText().trim();
                
            } else {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Concluido'";
            }
            
            Statement stmt;
            ResultSet rs;

            try {
                stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                rs = stmt.executeQuery(sqlquery);
                jTablePedidosCompra.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException ex) {
                Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultTableModel dm = (DefaultTableModel) jTablePedidosCompra.getModel();

        } else {
            btnRecarregarTabelaActionPerformed(evt);
        }
    }//GEN-LAST:event_rbPedidoConcluidoActionPerformed

    private void rbPedidoNegadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPedidoNegadoActionPerformed
        if (rbPedidoNegado.isSelected()) {

            String sqlquery;
            
            if(rbIDPedidoCompra.isSelected() && !txtPedidoCompra.getText().isEmpty()) {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Negado' AND NumPedido = " + txtPedidoCompra.getText().trim();
                
            } else if(rbIDCotacaoVencedora.isSelected() && !txtCotacaoVencedora.getText().isEmpty()) {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Negado' AND tc.NumCotacao = " + txtCotacaoVencedora.getText().trim();
                
            } else {
                sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial AND tpc.SITUACAO = 'Negado'";
            }

            Statement stmt;
            ResultSet rs;

            try {
                stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                rs = stmt.executeQuery(sqlquery);
                jTablePedidosCompra.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException ex) {
                Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultTableModel dm = (DefaultTableModel) jTablePedidosCompra.getModel();

        } else {
            btnRecarregarTabelaActionPerformed(evt);
        }
    }//GEN-LAST:event_rbPedidoNegadoActionPerformed

    private void rbIDCotacaoVencedoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIDCotacaoVencedoraActionPerformed
        if (rbIDCotacaoVencedora.isSelected()) {
            txtCotacaoVencedora.setEnabled(true);
            btnBuscarCotacaoVencedora.setEnabled(true);
            txtPedidoCompra.setEnabled(false);
            btnBuscarIDPedidoCompra.setEnabled(false);
        }
    }//GEN-LAST:event_rbIDCotacaoVencedoraActionPerformed

    private void rbIDPedidoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIDPedidoCompraActionPerformed
        if (rbIDPedidoCompra.isSelected()) {
            txtCotacaoVencedora.setEnabled(false);
            btnBuscarCotacaoVencedora.setEnabled(false);
            txtPedidoCompra.setEnabled(true);
            btnBuscarIDPedidoCompra.setEnabled(true);
        }
    }//GEN-LAST:event_rbIDPedidoCompraActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        conexao = new Conexao("GABRIEL", "GABRIEL");
        conexao.setDriver("oracle.jdbc.driver.OracleDriver");
        conexao.setConnectionString("jdbc:oracle:thin:@localhost:1521:xe");
        daoPedido = new DaoPedCompra(conexao.conectar());
        daoCotacao = new DaoCotacao(conexao.conectar());
        daoMaterial = new DaoMaterial(conexao.conectar());

        String sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm  "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial";

        Statement stmt;
        ResultSet rs;

        try {
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(sqlquery);
            jTablePedidosCompra.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel dm = (DefaultTableModel) jTablePedidosCompra.getModel();

    }//GEN-LAST:event_formWindowOpened

    private void btnRecarregarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecarregarTabelaActionPerformed
        
        String sqlquery = "Select NumPedido as NUMERO_PEDIDO, tpc.NumCotacao as NUMERO_COTACAO, tpc.NumSolicitacao as NUMERO_SOLICITACAO, NomeMaterial as NOME_MATERIAL, "
                    + "DataPedido as DATA_PEDIDO, tpc.Situacao as SITUACAO_PEDIDO from tbl_Pedido_Compra tpc, tbl_Cotacao tc, tbl_Material tm "
                    + "where tpc.NumCotacao = tc.NumCotacao AND tc.CodMaterial = tm.CodMaterial";

        Statement stmt;
        ResultSet rs;

        try {
            stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(sqlquery);
            jTablePedidosCompra.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (SQLException ex) {
            Logger.getLogger(GUI_PesquisarFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        rbAguardandoAprovacao.setSelected(false);
        rbAguardandoContatoFornecedor.setSelected(false);
        rbPedidoConcluido.setSelected(false);
        rbPedidoNegado.setSelected(false);
        DefaultTableModel dm = (DefaultTableModel) jTablePedidosCompra.getModel();
    }//GEN-LAST:event_btnRecarregarTabelaActionPerformed

    private void btnGerarReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarReportActionPerformed
        gerarReport();
    }//GEN-LAST:event_btnGerarReportActionPerformed

    private void gerarReport() {
        try {
            String src = "src/report/report_PedidoCompra.jrxml";

            Map params = new HashMap();
            params.put("GABRIEL", "GABRIEL");
            JasperReport jr = JasperCompileManager.compileReport(src);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, conexao.conectar());
            JasperViewer.viewReport(jp, false);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Erro File-Report: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarPedidoCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarPedidoCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarPedidoCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarPedidoCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_ConsultarPedidoCompra().setVisible(true);
            }
        });
    }

    private void filter(String query) {
        //TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(dm);
        TableRowSorter<DefaultTableModel> tr = (TableRowSorter) jTablePedidosCompra.getRowSorter();
        if (query.length() == 0) {
            tr.setRowFilter(null);
        } else {
            try {
                RowFilter<DefaultTableModel, Object> rf = RowFilter.regexFilter(query, 0, 1);
                tr.setRowFilter(rf);
            } catch (java.util.regex.PatternSyntaxException e) {
                tr.setRowFilter(null);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCotacaoVencedora;
    private javax.swing.JButton btnBuscarIDPedidoCompra;
    private javax.swing.JButton btnGerarReport;
    private javax.swing.JButton btnRecarregarTabela;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePedidosCompra;
    private javax.swing.JRadioButton rbAguardandoAprovacao;
    private javax.swing.JRadioButton rbAguardandoContatoFornecedor;
    private javax.swing.JRadioButton rbIDCotacaoVencedora;
    private javax.swing.JRadioButton rbIDPedidoCompra;
    private javax.swing.JRadioButton rbPedidoConcluido;
    private javax.swing.JRadioButton rbPedidoNegado;
    private javax.swing.JTextField txtCotacaoVencedora;
    private javax.swing.JTextField txtPedidoCompra;
    // End of variables declaration//GEN-END:variables

    private Conexao conexao = null;
    private Cotacao cotacao;
    private DaoCotacao daoCotacao;
    private Material material;
    private DaoMaterial daoMaterial;
    private PedidoCompra pedido;
    private DaoPedCompra daoPedido;
}
