/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.Conexao;
import control.DaoRequisicaoCompra;
import control.DaoUsuario;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import model.RequisicaoCompra;
import model.Usuario;

/**
 *
 * @author Gabriel Pilan
 */
public class GUI_Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public GUI_Menu() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        /*Esse to Back tambem esta implementado
        mais para frente para deixar o Menu sempre
        Como um BackGround*/
        toBack();
    }
    
    private String user;
    private String nivel;
    private String nome;
    
    
    /*Colocar aqui Verdadeiro quando for Habilitar as Funcoes de Login
        Enquanto estivermos em estado de teste LoginHabilita mantem false*/
    private boolean loginHabilita = false;
    
    private boolean ExisteCotacoesRecebidas = false;
    
    public GUI_Menu(String login, String senha) {
        initComponents();
        
        /*
        Aqui tinha antes a Verificacao do Login coloquei no Form Window Opened
        Caso de algum erro verificar se nao eh necessario voltar o item aqui
        mas pelo q testei nao adiante ter aquela verificacao nesse lugar
        */
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNomeFuncionario = new javax.swing.JTextField();
        txtData = new javax.swing.JTextField();
        txtHora = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuLogin = new javax.swing.JMenu();
        jMenuItemLogin = new javax.swing.JMenuItem();
        jMenuCadastro = new javax.swing.JMenu();
        jMenuItemCadastroUsuario = new javax.swing.JMenuItem();
        jMenuItemCadastroFornecedor = new javax.swing.JMenuItem();
        jMenuItemCadastrarMaterial = new javax.swing.JMenuItem();
        jMenuItemCadastrarCotacoes = new javax.swing.JMenuItem();
        jMenuItemCriarPedidoCompra = new javax.swing.JMenuItem();
        jMenuOperacoes = new javax.swing.JMenu();
        jMenuItemRequisicaoCompra = new javax.swing.JMenuItem();
        jMenuItemAssociarMaterialFornecedor = new javax.swing.JMenuItem();
        jMenuItemSelecionarCotacaoVencedora = new javax.swing.JMenuItem();
        jMenuItemDecisaoPedidoCompra = new javax.swing.JMenuItem();
        jMenuItemFinalizarCompra = new javax.swing.JMenuItem();
        jMenuItemAvaliarFornecedor = new javax.swing.JMenuItem();
        jMenuConsultar = new javax.swing.JMenu();
        jMenuItemConsultarRequisicao = new javax.swing.JMenuItem();
        jMenuItemConsultarMaterial = new javax.swing.JMenuItem();
        jMenuItemConsultarFornecedor = new javax.swing.JMenuItem();
        jMenuItemConsultarFornecedorMateriais = new javax.swing.JMenuItem();
        jMenuItemConsultarCotacao = new javax.swing.JMenuItem();
        jMenuItemConsultarPedidoCompra = new javax.swing.JMenuItem();
        jMenuItemConsultarRanking = new javax.swing.JMenuItem();
        jMenuNotificacoes = new javax.swing.JMenu();
        jMenuItemNotificacoesPendentes = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 0, 36)); // NOI18N
        jLabel1.setText("SISTEMA DE COMPRAS");

        jLabel2.setFont(new java.awt.Font("Segoe UI Emoji", 0, 24)); // NOI18N
        jLabel2.setText("Versao: Beta");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Hora");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Nome do Funcionário");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Data");

        txtNomeFuncionario.setEditable(false);
        txtNomeFuncionario.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtNomeFuncionario.setEnabled(false);

        txtData.setEditable(false);
        txtData.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtData.setEnabled(false);

        txtHora.setEditable(false);
        txtHora.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtHora.setEnabled(false);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/Logo.png"))); // NOI18N

        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N

        jMenuLogin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenuLogin.setText("Login    ");
        jMenuLogin.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N

        jMenuItemLogin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemLogin.setText("Login");
        jMenuItemLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLoginActionPerformed(evt);
            }
        });
        jMenuLogin.add(jMenuItemLogin);

        jMenuBar1.add(jMenuLogin);

        jMenuCadastro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenuCadastro.setText("Gerenciar   ");
        jMenuCadastro.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N

        jMenuItemCadastroUsuario.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemCadastroUsuario.setText("Gerenciar Usuário");
        jMenuItemCadastroUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCadastroUsuarioActionPerformed(evt);
            }
        });
        jMenuCadastro.add(jMenuItemCadastroUsuario);

        jMenuItemCadastroFornecedor.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemCadastroFornecedor.setText("Gerenciar Fornecedor");
        jMenuItemCadastroFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCadastroFornecedorActionPerformed(evt);
            }
        });
        jMenuCadastro.add(jMenuItemCadastroFornecedor);

        jMenuItemCadastrarMaterial.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemCadastrarMaterial.setText("Gerenciar Material");
        jMenuItemCadastrarMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCadastrarMaterialActionPerformed(evt);
            }
        });
        jMenuCadastro.add(jMenuItemCadastrarMaterial);

        jMenuItemCadastrarCotacoes.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemCadastrarCotacoes.setText("Gerenciar Cotações de uma Requisição");
        jMenuItemCadastrarCotacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCadastrarCotacoesActionPerformed(evt);
            }
        });
        jMenuCadastro.add(jMenuItemCadastrarCotacoes);

        jMenuItemCriarPedidoCompra.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemCriarPedidoCompra.setText("Gerenciar Pedido de Compra");
        jMenuItemCriarPedidoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCriarPedidoCompraActionPerformed(evt);
            }
        });
        jMenuCadastro.add(jMenuItemCriarPedidoCompra);

        jMenuBar1.add(jMenuCadastro);

        jMenuOperacoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenuOperacoes.setText("Operações   ");
        jMenuOperacoes.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N

        jMenuItemRequisicaoCompra.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemRequisicaoCompra.setText("Requisição de Compra");
        jMenuItemRequisicaoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRequisicaoCompraActionPerformed(evt);
            }
        });
        jMenuOperacoes.add(jMenuItemRequisicaoCompra);

        jMenuItemAssociarMaterialFornecedor.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemAssociarMaterialFornecedor.setText("Associar Material Fornecedor");
        jMenuItemAssociarMaterialFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAssociarMaterialFornecedorActionPerformed(evt);
            }
        });
        jMenuOperacoes.add(jMenuItemAssociarMaterialFornecedor);

        jMenuItemSelecionarCotacaoVencedora.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemSelecionarCotacaoVencedora.setText("Selecionar Cotação Vencedora");
        jMenuItemSelecionarCotacaoVencedora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSelecionarCotacaoVencedoraActionPerformed(evt);
            }
        });
        jMenuOperacoes.add(jMenuItemSelecionarCotacaoVencedora);

        jMenuItemDecisaoPedidoCompra.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemDecisaoPedidoCompra.setText("Aprovar/Rejeitar Pedido de Compra");
        jMenuItemDecisaoPedidoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDecisaoPedidoCompraActionPerformed(evt);
            }
        });
        jMenuOperacoes.add(jMenuItemDecisaoPedidoCompra);

        jMenuItemFinalizarCompra.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemFinalizarCompra.setText("Finalizar Compra");
        jMenuItemFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFinalizarCompraActionPerformed(evt);
            }
        });
        jMenuOperacoes.add(jMenuItemFinalizarCompra);

        jMenuItemAvaliarFornecedor.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemAvaliarFornecedor.setText("Avaliar Fornecedor");
        jMenuItemAvaliarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAvaliarFornecedorActionPerformed(evt);
            }
        });
        jMenuOperacoes.add(jMenuItemAvaliarFornecedor);

        jMenuBar1.add(jMenuOperacoes);

        jMenuConsultar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenuConsultar.setText("Consultas   ");
        jMenuConsultar.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N

        jMenuItemConsultarRequisicao.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemConsultarRequisicao.setText("Consultar Requisição de Compra");
        jMenuItemConsultarRequisicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConsultarRequisicaoActionPerformed(evt);
            }
        });
        jMenuConsultar.add(jMenuItemConsultarRequisicao);

        jMenuItemConsultarMaterial.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemConsultarMaterial.setText("Consultar Material");
        jMenuItemConsultarMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConsultarMaterialActionPerformed(evt);
            }
        });
        jMenuConsultar.add(jMenuItemConsultarMaterial);

        jMenuItemConsultarFornecedor.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemConsultarFornecedor.setText("Consultar Fornecedor");
        jMenuItemConsultarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConsultarFornecedorActionPerformed(evt);
            }
        });
        jMenuConsultar.add(jMenuItemConsultarFornecedor);

        jMenuItemConsultarFornecedorMateriais.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemConsultarFornecedorMateriais.setText("Consultar Fornecedor de Materiais");
        jMenuItemConsultarFornecedorMateriais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConsultarFornecedorMateriaisActionPerformed(evt);
            }
        });
        jMenuConsultar.add(jMenuItemConsultarFornecedorMateriais);

        jMenuItemConsultarCotacao.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemConsultarCotacao.setText("Consultar Cotação");
        jMenuItemConsultarCotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConsultarCotacaoActionPerformed(evt);
            }
        });
        jMenuConsultar.add(jMenuItemConsultarCotacao);

        jMenuItemConsultarPedidoCompra.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemConsultarPedidoCompra.setText("Consultar Pedido de Compra");
        jMenuItemConsultarPedidoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConsultarPedidoCompraActionPerformed(evt);
            }
        });
        jMenuConsultar.add(jMenuItemConsultarPedidoCompra);

        jMenuItemConsultarRanking.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemConsultarRanking.setText("Consultar Ranking");
        jMenuItemConsultarRanking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConsultarRankingActionPerformed(evt);
            }
        });
        jMenuConsultar.add(jMenuItemConsultarRanking);

        jMenuBar1.add(jMenuConsultar);

        jMenuNotificacoes.setText("Notificações");
        jMenuNotificacoes.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N

        jMenuItemNotificacoesPendentes.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItemNotificacoesPendentes.setText("Notificações Pendentes de Cotações de Fornecedores");
        jMenuItemNotificacoesPendentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNotificacoesPendentesActionPerformed(evt);
            }
        });
        jMenuNotificacoes.add(jMenuItemNotificacoesPendentes);

        jMenuBar1.add(jMenuNotificacoes);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(411, 411, 411)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(172, 172, 172)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5)
                        .addComponent(txtNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemCadastroUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCadastroUsuarioActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") || nivel.equals("B") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_GerenciarUsuario().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_GerenciarUsuario().setVisible(true);
        }
    }//GEN-LAST:event_jMenuItemCadastroUsuarioActionPerformed

    private void jMenuItemCadastroFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCadastroFornecedorActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_GerenciarFornecedor().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_GerenciarFornecedor().setVisible(true);
        }
    }//GEN-LAST:event_jMenuItemCadastroFornecedorActionPerformed

    private void jMenuItemAvaliarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAvaliarFornecedorActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_AvaliarFornecedor().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_AvaliarFornecedor().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemAvaliarFornecedorActionPerformed

    private void jMenuItemLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLoginActionPerformed
        new GUI_Login().setVisible(true);
        
    }//GEN-LAST:event_jMenuItemLoginActionPerformed

    private void jMenuItemRequisicaoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRequisicaoCompraActionPerformed
        new GUI_RequisicaoCompra().setVisible(true);
  
    }//GEN-LAST:event_jMenuItemRequisicaoCompraActionPerformed

    private void jMenuItemAssociarMaterialFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAssociarMaterialFornecedorActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_AssociarMaterialFornecedor().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_AssociarMaterialFornecedor().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemAssociarMaterialFornecedorActionPerformed

    private void jMenuItemConsultarFornecedorMateriaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConsultarFornecedorMateriaisActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_ConsultarFornecedorMaterial().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_ConsultarFornecedorMaterial().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemConsultarFornecedorMateriaisActionPerformed

    private void jMenuItemConsultarRequisicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConsultarRequisicaoActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_ConsultarRequisicao().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_ConsultarRequisicao().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemConsultarRequisicaoActionPerformed

    private void jMenuItemCadastrarCotacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCadastrarCotacoesActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_GerenciarCotacoesDeUmaRequisicao().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_GerenciarCotacoesDeUmaRequisicao().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemCadastrarCotacoesActionPerformed

    private void jMenuItemSelecionarCotacaoVencedoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSelecionarCotacaoVencedoraActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_CotacaoVencedora().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_CotacaoVencedora().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemSelecionarCotacaoVencedoraActionPerformed

    private void jMenuItemConsultarCotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConsultarCotacaoActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_ConsultarCotacao().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_ConsultarCotacao().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemConsultarCotacaoActionPerformed

    private void jMenuItemConsultarPedidoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConsultarPedidoCompraActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_ConsultarPedidoCompra().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_ConsultarPedidoCompra().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemConsultarPedidoCompraActionPerformed

    private void jMenuItemCriarPedidoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCriarPedidoCompraActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_GerenciarPedidoCompra().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_GerenciarPedidoCompra().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemCriarPedidoCompraActionPerformed

    private void jMenuItemCadastrarMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCadastrarMaterialActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_GerenciarMaterial().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_GerenciarMaterial().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemCadastrarMaterialActionPerformed

    private void jMenuItemConsultarRankingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConsultarRankingActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_ConsultarRankingFornecedores().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_ConsultarRankingFornecedores().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemConsultarRankingActionPerformed

    private void jMenuItemDecisaoPedidoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDecisaoPedidoCompraActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") || nivel.equals("B") || nivel.equals("C") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_DecisaoPedidoCompra().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_DecisaoPedidoCompra().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemDecisaoPedidoCompraActionPerformed

    private void jMenuItemFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFinalizarCompraActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_FinalizarCompra().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_FinalizarCompra().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemFinalizarCompraActionPerformed

    private void jMenuItemConsultarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConsultarFornecedorActionPerformed
        if (loginHabilita == true){
            
            try{
                    if( nivel.equals("A") ){
                        throw new Exception("Nivel de acesso insuficiente.");
                        
                    }else{
                        new GUI_PesquisarFornecedor().setVisible(true);
                    }

            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao tentar abrir janela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            new GUI_PesquisarFornecedor().setVisible(true);
        }
        
    }//GEN-LAST:event_jMenuItemConsultarFornecedorActionPerformed

    private void jMenuItemConsultarMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConsultarMaterialActionPerformed
        new GUI_PesquisarMaterial().setVisible(true);
        
    }//GEN-LAST:event_jMenuItemConsultarMaterialActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate localDate = LocalDate.now();
        txtData.setText(dtf.format(localDate));
        txtNomeFuncionario.setText(nome);
        
        if (!txtNomeFuncionario.getText().isEmpty()) {
            conexao = new Conexao("GABRIEL", "GABRIEL");
            conexao.setDriver("oracle.jdbc.driver.OracleDriver");
            conexao.setConnectionString("jdbc:oracle:thin:@localhost:1521:xe");
            
            try {
            /*Carrega cotações recebidas dos fornecedores e redireciona para o Gerenciamento de Cotações de uma Requisição*/
            String sqlquery = "SELECT NumSolicitacao, NumCotacao, CNPJ, CodMaterial FROM tbl_Cotacao WHERE SituacaoCotacao = 'Recebida' ORDER BY DataCotacao DESC";
            Statement stmt;
            ResultSet rs;

           
                
                //stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                stmt = conexao.conectar().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                //rs = stmt.executeQuery(sqlquery);
                rs = stmt.executeQuery(sqlquery);
                
                /*Verificando se há notificações(Cotações pendentes)*/
                if (!rs.next()) {
                    
                    //btnNotifica.setVisible(false);
                    //btnNotifica.setEnabled(false);
                    ExisteCotacoesRecebidas = false;
                    
                } else {
                    //btnNotifica.setVisible(true);
                    //btnNotifica.setEnabled(true);
                    ExisteCotacoesRecebidas = true;
                    
                    
                    
                }
            } catch (SQLException ex) {
                System.out.println("Erro");
            }
        }

        
        
        if(ExisteCotacoesRecebidas == true){
        jMenuNotificacoes.setForeground(Color.red);        
        JOptionPane.showMessageDialog(null, "Foram recebidas novas Cotacoes dos Fornecedores \n"
                + "Verifique na Aba de Notificacoes");
        
        }
        
        
        class Demo extends TimerTask {

            public void run() {
                txtHora.setText( String.format("%02d", LocalDateTime.now().getHour()) + ":" + String.format("%02d", LocalDateTime.now().getMinute()) + ":" + String.format("%02d", LocalDateTime.now().getSecond()));

            }
        }
        //main method
        Timer t1 = new Timer();
        t1.schedule(new Demo(), 0, 1000);
        
        
        
    }//GEN-LAST:event_formWindowOpened

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        /*Atraves desse comando o menu fica sempre no fundo permitindo
        que as outras GUIs nao precisem estar com a propriedade Always on Top
        ativa o que permite que os Pop Ups aparecam na tela*/
        toBack();
    }//GEN-LAST:event_formMouseClicked

    private void jMenuItemNotificacoesPendentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNotificacoesPendentesActionPerformed
        new GUI_Notificacao().setVisible(true);
    }//GEN-LAST:event_jMenuItemNotificacoesPendentesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCadastro;
    private javax.swing.JMenu jMenuConsultar;
    private javax.swing.JMenuItem jMenuItemAssociarMaterialFornecedor;
    private javax.swing.JMenuItem jMenuItemAvaliarFornecedor;
    private javax.swing.JMenuItem jMenuItemCadastrarCotacoes;
    private javax.swing.JMenuItem jMenuItemCadastrarMaterial;
    private javax.swing.JMenuItem jMenuItemCadastroFornecedor;
    private javax.swing.JMenuItem jMenuItemCadastroUsuario;
    private javax.swing.JMenuItem jMenuItemConsultarCotacao;
    private javax.swing.JMenuItem jMenuItemConsultarFornecedor;
    private javax.swing.JMenuItem jMenuItemConsultarFornecedorMateriais;
    private javax.swing.JMenuItem jMenuItemConsultarMaterial;
    private javax.swing.JMenuItem jMenuItemConsultarPedidoCompra;
    private javax.swing.JMenuItem jMenuItemConsultarRanking;
    private javax.swing.JMenuItem jMenuItemConsultarRequisicao;
    private javax.swing.JMenuItem jMenuItemCriarPedidoCompra;
    private javax.swing.JMenuItem jMenuItemDecisaoPedidoCompra;
    private javax.swing.JMenuItem jMenuItemFinalizarCompra;
    private javax.swing.JMenuItem jMenuItemLogin;
    private javax.swing.JMenuItem jMenuItemNotificacoesPendentes;
    private javax.swing.JMenuItem jMenuItemRequisicaoCompra;
    private javax.swing.JMenuItem jMenuItemSelecionarCotacaoVencedora;
    private javax.swing.JMenu jMenuLogin;
    private javax.swing.JMenu jMenuNotificacoes;
    private javax.swing.JMenu jMenuOperacoes;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtNomeFuncionario;
    // End of variables declaration//GEN-END:variables
    private Conexao conexao = null;
    private Usuario usuario;
    private DaoUsuario daoUsuario;

    public void setUser(String user) {
        this.user = user;
    }
    public void setNivel(String nivel) {
        this.nivel = nivel;
    }
    public void setNome(String nome) {
        this.nome = nome;
    }
}
